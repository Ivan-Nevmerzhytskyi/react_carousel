{"version":3,"sources":["components/Carousel/Carousel.tsx","components/CarouselForm/CarouselForm.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextClick","props","infinite","images","itemWidth","step","maxRight","frameSize","length","stepWidth","currentLeft","Math","max","setState","handlePrevClick","min","this","animationDuration","className","type","disabled","onClick","style","width","height","marginLeft","transition","map","imageUrl","index","src","alt","React","Component","CarouselForm","updateSettings","event","currentTarget","name","value","stateValue","checked","previousState","htmlFor","id","required","onChange","imagesFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fbd7643.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  handleNextClick = () => {\n    const { position } = this.state;\n    const {\n      infinite,\n      images,\n      itemWidth,\n      step,\n      frameSize,\n    } = this.props;\n\n    const maxRight = itemWidth * (frameSize - images.length);\n    const stepWidth = itemWidth * step;\n    const currentLeft = Math.max((position - stepWidth), maxRight);\n\n    this.setState({\n      position: (position === maxRight && infinite)\n        ? 0\n        : currentLeft,\n    });\n  };\n\n  handlePrevClick = () => {\n    const { position } = this.state;\n    const {\n      infinite,\n      images,\n      itemWidth,\n      step,\n      frameSize,\n    } = this.props;\n\n    const maxRight = itemWidth * (frameSize - images.length);\n    const stepWidth = itemWidth * step;\n    const currentLeft = Math.min((position + stepWidth), 0);\n\n    this.setState({\n      position: (position === 0 && infinite)\n        ? maxRight\n        : currentLeft,\n    });\n  };\n\n  render() {\n    const { position } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Arrow Arrow--Prev\"\n          disabled={(!infinite && position === 0)}\n          onClick={this.handlePrevClick}\n        >\n          ⇦\n        </button>\n\n        <div\n          className=\"Carousel__container\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${images.length * itemWidth}px`,\n              marginLeft: `${position}px`,\n              transition: `margin-left ${animationDuration}ms`,\n            }}\n          >\n            {images.map((imageUrl, index) => (\n              <li\n                key={imageUrl}\n                className=\"Carousel__item\"\n              >\n                <img\n                  className=\"Carousel__image\"\n                  src={imageUrl}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={\n            !infinite && position === itemWidth * (frameSize - images.length)\n          }\n          className=\"Arrow Arrow--Next\"\n          onClick={this.handleNextClick}\n        >\n          ⇨\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CarouselForm.scss';\nimport { Carousel } from '../Carousel';\n\ntype Props = {\n  images: string[];\n};\n\ntype State = {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport class CarouselForm extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  updateSettings = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n    const stateValue = (name === 'infinite')\n      ? event.currentTarget.checked\n      : +value;\n\n    this.setState(previousState => ({\n      ...previousState,\n      [name]: stateValue,\n    }));\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <form className=\"inputForm\">\n          <label className=\"inputForm__label\" htmlFor=\"step\">\n            Step (count):\n          </label>\n          <input\n            id=\"step\"\n            name=\"step\"\n            className=\"inputForm__input\"\n            type=\"number\"\n            min=\"1\"\n            max={images.length}\n            step=\"1\"\n            value={step}\n            required\n            onChange={this.updateSettings}\n          />\n\n          <label className=\"inputForm__label\" htmlFor=\"frameSize\">\n            Frame size (count):\n          </label>\n          <input\n            id=\"frameSize\"\n            name=\"frameSize\"\n            className=\"inputForm__input\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            max={images.length}\n            value={frameSize}\n            required\n            onChange={this.updateSettings}\n          />\n\n          <label className=\"inputForm__label\" htmlFor=\"itemWidth\">\n            Item width (px):\n          </label>\n          <input\n            id=\"itemWidth\"\n            name=\"itemWidth\"\n            className=\"inputForm__input\"\n            type=\"number\"\n            min=\"50\"\n            max=\"200\"\n            step=\"10\"\n            value={itemWidth}\n            required\n            onChange={this.updateSettings}\n          />\n\n          <label className=\"inputForm__label\" htmlFor=\"animationDuration\">\n            Animation duration (ms):\n          </label>\n          <input\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            className=\"inputForm__input\"\n            type=\"number\"\n            min=\"0\"\n            max=\"5000\"\n            step=\"100\"\n            value={animationDuration}\n            required\n            onChange={this.updateSettings}\n          />\n\n          <label className=\"inputForm__label\" htmlFor=\"infinite\">\n            Is infinite (y/n):\n          </label>\n          <input\n            id=\"infinite\"\n            name=\"infinite\"\n            className=\"inputForm__input\"\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={this.updateSettings}\n          />\n        </form>\n\n        <Carousel\n          images={images}\n          {...this.state}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { CarouselForm } from './components/CarouselForm';\n\nconst imagesFromServer = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {imagesFromServer.length} images</h1>\n\n      <CarouselForm images={imagesFromServer} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}